apiVersion: v1
kind: ServiceAccount
metadata:
  name: kube-ops-view
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: kube-ops-view
rules:
- apiGroups: [""]
  resources: ["nodes", "pods"]
  verbs: ["get", "list"]
- apiGroups: ["apps"]
  resources: ["deployments", "replicasets"]
  verbs: ["get", "list"]
- apiGroups: ["metrics.k8s.io"]
  resources: ["nodes", "pods"]
  verbs: ["get", "list"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: kube-ops-view
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kube-ops-view
subjects:
- kind: ServiceAccount
  name: kube-ops-view
  namespace: default
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kube-ops-view
spec:
  selector:
    matchLabels:
      app: kube-ops-view
  replicas: 1
  template:
    metadata:
      labels:
        app: kube-ops-view
    spec:
      serviceAccountName: kube-ops-view
      containers:
      - name: kube-ops-view
        image: hjacobs/kube-ops-view:20.4.0
        ports:
        - containerPort: 8080
        env:
        - name: REDIS_URL
          value: "redis://localhost:6379"
      - name: redis
        image: redis:alpine
        ports:
        - containerPort: 6379
---
apiVersion: v1
kind: Service
metadata:
  name: kube-ops-view
spec:
  selector:
    app: kube-ops-view
  type: NodePort
  ports:
  - port: 80
    targetPort: 8080
    nodePort: 32000
